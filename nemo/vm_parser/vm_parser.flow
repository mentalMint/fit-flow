import lingo/pegcode/driver;
import nemo_parser/nemo_parser;

export {
	VMProgram(initBody : InitBody, operators : [Operator]);
    Operator ::= VMAssign, VMIf, End;
	VMAssign(label : Int, lvalue : Lvalue, value : Value, L : LabelSet);
    VMIf(label : Int, cond : Cond, L1 : LabelSet, L2 : LabelSet);
	LabelSet(labels : [Int]);
	End(label : Int);

	parseVM(source : string) -> VMProgram;
}

nemoVMGrammarOp : ref Maybe<[PegOp]> = ref None();

nemoVMGrammar() {
	// Prepare the grammar in the given file using flow syntax for inlining a string from a file
	// but be sure to only do this once
	onlyOnce(nemoVMGrammarOp, \ -> {
		compilePegGrammar("#include vm_parser/vm_parser.lingo");
	});
}

parseVM(source: string) {
	specialPegActions = {
		t1 = setTree(defaultPegActions.t, "buildOp", buildOp);
		SemanticActions(t1);
	}
	parsic(nemoVMGrammar(), source, specialPegActions);
}