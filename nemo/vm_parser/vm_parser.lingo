program = ws initbody:i ws body:b ws { VMProgram(:i, :b) };
initbody = ws init*:inits ws { InitBody(:inits) };
init = ws "VAR" ws var:v ws ":" ws type:t ws { Init(:v, :t) };
type =  ws "INT" ws { IntType() } | ws "[" ws type:t ws "]" ws { ArrayType(:t) };

body = ws operator*:a ws { :a };
operator = assign | if | end;
assign = ws label:label ws ":" ws lvalue:lvalue ws ":=" ws value:value ws "goto" ws labelSet:L { VMAssign(:label, :lvalue, :value, :L) };
lvalue = ws var:var ws { :var };
value = ws (upd | array | add):value ws { :value };

app = ws "APP" ws "(" ws var:var ws "," ws value:idx ws ")" ws { App(:var, :idx) };
upd = ws "UPD" ws "(" ws var:var ws "," ws value:idx ws "," ws value:val ws ")" ws { Upd(:var, :idx, :val) };

if =  ws label:label ws ":" ws "if" ws predicate:pred ws "then" ws labelSet:then ws else:else { VMIf(:label, :pred, :then, :else) };
else = ws "else" ws labelSet:else ws { :else };
predicate = ws add:e1 ws predName$name ws add:e2 ws { Pred(:e1, :e2, $name) } | ws "not" ws predicate:pred ws { Not(:pred) };
predName = ('<=' | '>=' | '!=' | '<' | '>' | '='); 

end = ws label:label ws ":" ws { End(:label) };

add = ws sub:left ws "+" ws add:right ws { BinOp("+", :left, :right) } | sub;
sub = ws mul:left ws rsub+:right ws { buildOp("-", :left, :right) } | mul;
rsub = ws "-" ws mul:val ws { :val };
mul = ws div:left ws rmul+:right { buildOp("*", :left, :right) } | div;
rmul = ws "*" ws div:val ws { :val };
div = ws dif:left ws rdiv+:right { buildOp("/", :left, :right) } | dif;
rdiv = ws "/" ws dif:val ws { :val };
dif = ws "d/d" atom:val ws "(" ws add:ex ws ")" ws { BinOp("'", :ex, :val) } | atom;
atom = ws app:val ws { :val } | ws int:val ws { :val } | ws var:val ws { :val } | ws "(" ws expr:val ws ")" ws { :val };
expr = ws add:val ws { :val } | ws "(" ws expr:val ws ")" ws { :val };

label = int:l { :l };
labelSet = ws "{" ws int*:arr ws "}" ws { Array(:arr) };
array = ws "[" ws (int | var)*:arr ws "]" ws { Array(:arr) };
int = ws ('0' - '9')+$i ws { Int(s2i($i)) };
var = ws ('A' - 'Z')+$name ws { Var($name) };
ws = (' ' | '\r' | '\n' | '\t')*;